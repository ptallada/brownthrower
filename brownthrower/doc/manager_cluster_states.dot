digraph cluster_states {
    // Possible job states
    DELETED     [shape="plaintext"]; // The cluster has been deleted.
    STASHED     [shape="circle"];    // The cluster is in preparation phase. It is being configured and cannot be executed yet.
    READY       [shape="ellipse"];   // The cluster has been configured and its dependencies are already set. It will be executed as soon as possible.
    DEPLOYED    [shape="ellipse"];   // The prolog has been executed successfully and the job graph has been generated.
    PROLOG_FAIL [shape="box"];       // The prolog has failed to finish successfully
    CANCELLING  [shape="ellipse"];   // The user has asked to cancel this cluster.
    CANCELLED   [shape="box"]        // The cluster has been interrupted. No job has failed.
    FAILING     [shape="ellipse"];   // The cluster is still being processed and some job has failed.
    PROCESSING  [shape="ellipse"];   // The cluster is being processed. No job has failed.
    DONE        [shape="box"];       // All the jobs have finished successfully.
    FAILED      [shape="box"];       // All the jobs have finished and some have failed.
    
    // Grouping
    { //rank="source";
        PROLOG_FAIL;
    }
    { rank="same";
        DELETED; STASHED; READY; DEPLOYED; PROCESSING; DONE;
    }
    
    // Expected flow
    STASHED         -> READY       [style="dotted"]; // User marks this cluster as ready for execution
    READY           -> DEPLOYED    [style="solid"];  // The prolog has been executed successfully.
    DEPLOYED        -> PROCESSING  [style="solid"];  // The dispatcher is handling some of the jobs of this cluster
    PROCESSING      -> DONE        [style="solid"];  // All the jobs of this cluster have finished successfully
    
    // Cluster fails to run prolog
    READY           -> PROLOG_FAIL [style="solid"];  // The prolog did not finish successfully.
    
    // The job/runner fails to finish successfully
    PROCESSING      -> FAILING     [style="solid"];  // A job did not finish successfully
    FAILING         -> FAILED      [style="solid"];  // All the jobs in the cluster have finished and some failed.
    
    // The job has to be cancelled
    PROCESSING      -> CANCELLING  [style="dotted"]; // The user wants this cluster to be cancelled
    FAILING         -> CANCELLING  [style="dotted"]; // The user wants this cluster to be cancelled
    CANCELLING      -> FAILED      [style="solid", constraint="false"];  // All jobs have been cancelled, but at least one of them failed.
    CANCELLING      -> CANCELLED   [style="solid"];  // All jobs have been cancelled and no one failed.
    
    // Return the cluster to the stash
    READY           -> STASHED     [style="dotted", constraint="false"];
    PROLOG_FAIL:w   -> STASHED   [style="dotted", constraint="false"];
    CANCELLED:w     -> STASHED:s   [style="dotted"];
    
    // Retry/resume the cluster
    FAILED          -> DEPLOYED    [style="dotted"];
    CANCELLED       -> DEPLOYED    [style="dotted", constraint="false"];
    
    // Remove the cluster
    STASHED         -> DELETED     [style="dotted", constraint="false"];
}
